//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ITech.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ITechEntities : DbContext
    {
        public ITechEntities()
            : base("name=ITechEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AddressDeliver> AddressDelivers { get; set; }
        public virtual DbSet<Administrator> Administrators { get; set; }
        public virtual DbSet<Cate_Specs> Cate_Specs { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Evaluate> Evaluates { get; set; }
        public virtual DbSet<Follow> Follows { get; set; }
        public virtual DbSet<Gallery> Galleries { get; set; }
        public virtual DbSet<MyCart> MyCarts { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product_Category> Product_Category { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Shop> Shops { get; set; }
        public virtual DbSet<Specification> Specifications { get; set; }
        public virtual DbSet<SpecValue> SpecValues { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Keyword> Keywords { get; set; }
        public virtual DbSet<Product_Spec> Product_Spec { get; set; }
    
        public virtual ObjectResult<SearchSanPhamTuongTu_Result> SearchSanPhamTuongTu(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchSanPhamTuongTu_Result>("SearchSanPhamTuongTu", productIDParameter);
        }
    
        public virtual ObjectResult<SearchSanPhamByDanhMuc_Result> SearchSanPhamByDanhMuc(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchSanPhamByDanhMuc_Result>("SearchSanPhamByDanhMuc", categoryIDParameter);
        }
    
        public virtual ObjectResult<sp_ListOrderByShop_Result> sp_ListOrderByShop(string shopID, Nullable<int> status, string maDH, Nullable<System.DateTime> tuNgay, Nullable<System.DateTime> denNgay, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var shopIDParameter = shopID != null ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var maDHParameter = maDH != null ?
                new ObjectParameter("MaDH", maDH) :
                new ObjectParameter("MaDH", typeof(string));
    
            var tuNgayParameter = tuNgay.HasValue ?
                new ObjectParameter("TuNgay", tuNgay) :
                new ObjectParameter("TuNgay", typeof(System.DateTime));
    
            var denNgayParameter = denNgay.HasValue ?
                new ObjectParameter("DenNgay", denNgay) :
                new ObjectParameter("DenNgay", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListOrderByShop_Result>("sp_ListOrderByShop", shopIDParameter, statusParameter, maDHParameter, tuNgayParameter, denNgayParameter, pageSizeParameter, pageIndexParameter);
        }
    
        public virtual ObjectResult<sp_ListOrderItemByOrder_Result> sp_ListOrderItemByOrder(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ListOrderItemByOrder_Result>("sp_ListOrderItemByOrder", orderIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CountListOrderByShop(string shopID, Nullable<int> status, string maDH, Nullable<System.DateTime> tuNgay, Nullable<System.DateTime> denNgay, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var shopIDParameter = shopID != null ?
                new ObjectParameter("ShopID", shopID) :
                new ObjectParameter("ShopID", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var maDHParameter = maDH != null ?
                new ObjectParameter("MaDH", maDH) :
                new ObjectParameter("MaDH", typeof(string));
    
            var tuNgayParameter = tuNgay.HasValue ?
                new ObjectParameter("TuNgay", tuNgay) :
                new ObjectParameter("TuNgay", typeof(System.DateTime));
    
            var denNgayParameter = denNgay.HasValue ?
                new ObjectParameter("DenNgay", denNgay) :
                new ObjectParameter("DenNgay", typeof(System.DateTime));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CountListOrderByShop", shopIDParameter, statusParameter, maDHParameter, tuNgayParameter, denNgayParameter, pageSizeParameter, pageIndexParameter);
        }
    }
}
